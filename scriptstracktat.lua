local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (5==v29) then v41=nil;function v41(v43,v44,v45) local v46=v43[1];local v47=v43[879 -(282 + 595) ];local v48=v43[3];return function(...) local v77=v46;local v78=v47;local v79=v48;local v80=v39;local v81=1638 -(1523 + 114) ;local v82= -1;local v83={};local v84={...};local v85=v20("#",...) -1 ;local v86={};local v87={};for v102=0,v85 do if (v102>=v79) then v83[v102-v79 ]=v84[v102 + 1 ];else v87[v102]=v84[v102 + 1 ];end end local v88=(v85-v79) + 1 ;local v89;local v90;while true do v89=v77[v81];v90=v89[1];if (v90<=(76 -22)) then if (v90<=26) then if (v90<=(1077 -(68 + 997))) then if (v90<=5) then if (v90<=2) then if (v90<=0) then v45[v89[3]]=v87[v89[2]];elseif (v90==1) then local v199=0;local v200;local v201;local v202;local v203;while true do if (v199==2) then for v477=v200,v82 do local v478=0;while true do if (v478==0) then v203=v203 + 1 ;v87[v477]=v201[v203];break;end end end break;end if (v199==0) then v200=v89[2];v201,v202=v80(v87[v200](v21(v87,v200 + 1 ,v89[3])));v199=1;end if (v199==1) then v82=(v202 + v200) -1 ;v203=0;v199=2;end end else v87[v89[2]]=v89[3];end elseif (v90<=3) then local v135=v89[2];local v136,v137=v80(v87[v135](v87[v135 + 1 ]));v82=(v137 + v135) -1 ;local v138=0;for v170=v135,v82 do local v171=0;while true do if (v171==0) then v138=v138 + (1271 -(226 + 1044)) ;v87[v170]=v136[v138];break;end end end elseif (v90>4) then do return;end else local v206=0;local v207;local v208;while true do if (v206==0) then v207=v89[2];v208={};v206=1;end if (v206==1) then for v479=1, #v86 do local v480=0;local v481;while true do if (v480==0) then v481=v86[v479];for v533=0, #v481 do local v534=v481[v533];local v535=v534[1];local v536=v534[2];if ((v535==v87) and (v536>=v207)) then local v539=0;while true do if (0==v539) then v208[v536]=v535[v536];v534[1]=v208;break;end end end end break;end end end break;end end end elseif (v90<=8) then if (v90<=6) then local v139=0;local v140;local v141;while true do if (1==v139) then for v402=v140 + 1 ,v89[17 -13 ] do v141=v141   .. v87[v402] ;end v87[v89[2]]=v141;break;end if (0==v139) then v140=v89[3];v141=v87[v140];v139=1;end end elseif (v90==7) then v87[v89[2]]=v87[v89[3]][v87[v89[4]]];elseif  not v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=10) then if (v90>9) then local v211=0;local v212;while true do if (v211==0) then v212=v89[2];v87[v212]=v87[v212](v21(v87,v212 + 1 ,v89[3]));break;end end else local v213=v89[2];local v214=v87[v213];local v215=v87[v213 + 2 ];if (v215>0) then if (v214>v87[v213 + 1 ]) then v81=v89[3];else v87[v213 + (120 -(32 + 85)) ]=v214;end elseif (v214<v87[v213 + 1 + 0 ]) then v81=v89[3];else v87[v213 + 3 ]=v214;end end elseif (v90==11) then v87[v89[2]][v87[v89[3]]]=v87[v89[4]];else v87[v89[2]]=v87[v89[3]]%v89[4] ;end elseif (v90<=(5 + 14)) then if (v90<=15) then if (v90<=13) then local v142=0;local v143;local v144;while true do if (v142==1) then for v404=v143 + (958 -(892 + 65)) ,v89[3] do v15(v144,v87[v404]);end break;end if (v142==0) then v143=v89[2];v144=v87[v143];v142=1;end end elseif (v90==14) then local v219=v89[2];local v220,v221=v80(v87[v219](v87[v219 + 1 ]));v82=(v221 + v219) -1 ;local v222=0;for v373=v219,v82 do v222=v222 + 1 ;v87[v373]=v220[v222];end else v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;end elseif (v90<=17) then if (v90==16) then local v224=v89[2];local v225=v87[v224];for v376=v224 + 1 ,v82 do v15(v225,v87[v376]);end else local v226=0;local v227;local v228;local v229;while true do if (v226==0) then v227=v89[2];v228={v87[v227](v87[v227 + 1 ])};v226=1;end if (v226==1) then v229=0;for v486=v227,v89[4] do v229=v229 + 1 ;v87[v486]=v228[v229];end break;end end end elseif (v90==(42 -24)) then v87[v89[2]]=v87[v89[3]] + v89[4] ;else v87[v89[2]]=v89[3]~=0 ;end elseif (v90<=(40 -18)) then if (v90<=20) then for v172=v89[2],v89[4 -1 ] do v87[v172]=nil;end elseif (v90==21) then local v232=0;local v233;while true do if (v232==0) then v233=v89[2];v87[v233]=v87[v233]();break;end end else v81=v89[3];end elseif (v90<=24) then if (v90>23) then v87[v89[2]]=v89[3]~=0 ;else local v236=v89[2];v87[v236]=v87[v236](v21(v87,v236 + 1 ,v82));end elseif (v90>25) then local v238=v89[2];local v239=v87[v238];local v240=v89[3];for v377=1,v240 do v239[v377]=v87[v238 + v377 ];end else v87[v89[2]][v87[v89[3]]]=v89[4];end elseif (v90<=40) then if (v90<=33) then if (v90<=29) then if (v90<=27) then v87[v89[2]]=v89[3] + v87[v89[354 -(87 + 263) ]] ;elseif (v90>(208 -(67 + 113))) then if (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end else v87[v89[2]]=v87[v89[3]];end elseif (v90<=31) then if (v90>30) then if ((v89[3]==v7("\18\205\209\182","\69\77\136\159\224\199\167\155")) or (v89[3 + 0 ]==v7("\213\242\231\116\215\249\229","\18\178\151\147"))) then v87[v89[4 -2 ]]=v45;else v87[v89[2]]=v45[v89[3]];end else local v245=0;local v246;local v247;local v248;local v249;while true do if (v245==2) then for v489=v246,v82 do v249=v249 + 1 ;v87[v489]=v247[v249];end break;end if (1==v245) then v82=(v248 + v246) -1 ;v249=0 + 0 ;v245=2;end if (0==v245) then v246=v89[2];v247,v248=v80(v87[v246](v21(v87,v246 + 1 ,v89[3])));v245=1;end end end elseif (v90==32) then local v250=0;local v251;while true do if (0==v250) then v251=v87[v89[4]];if  not v251 then v81=v81 + (3 -2) ;else local v510=0;while true do if (0==v510) then v87[v89[2]]=v251;v81=v89[3];break;end end end break;end end else local v252=v89[2];local v253=v87[v252];local v254=v89[3];for v380=1,v254 do v253[v380]=v87[v252 + v380 ];end end elseif (v90<=36) then if (v90<=34) then v87[v89[2]]=v44[v89[3]];elseif (v90>35) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end else v87[v89[2]][v89[3]]=v89[4];end elseif (v90<=38) then if (v90>37) then v87[v89[2]]=v89[955 -(802 + 150) ];else v87[v89[2]]();end elseif (v90==39) then if (v87[v89[5 -3 ]]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end else local v259=0;local v260;while true do if (v259==0) then v260=v89[2];do return v21(v87,v260,v82);end break;end end end elseif (v90<=47) then if (v90<=43) then if (v90<=41) then local v148=0;local v149;local v150;while true do if (v148==1) then for v411=v149 + 1 ,v82 do v15(v150,v87[v411]);end break;end if (v148==0) then v149=v89[2];v150=v87[v149];v148=1;end end elseif (v90==42) then v44[v89[3]]=v87[v89[2]];else v87[v89[2]]=v87[v89[5 -2 ]]%v87[v89[4]] ;end elseif (v90<=45) then if (v90==44) then local v264=v89[2];do return v87[v264](v21(v87,v264 + 1 ,v89[3]));end elseif (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90>(34 + 12)) then local v265=0;local v266;while true do if (v265==0) then v266=v89[2];v87[v266]=v87[v266](v21(v87,v266 + 1 ,v89[3]));break;end end else local v267=0;local v268;local v269;local v270;local v271;while true do if (v267==2) then for v492=v268,v82 do local v493=0;while true do if (0==v493) then v271=v271 + 1 ;v87[v492]=v269[v271];break;end end end break;end if (v267==0) then v268=v89[2];v269,v270=v80(v87[v268](v21(v87,v268 + 1 ,v82)));v267=1;end if (v267==1) then v82=(v270 + v268) -1 ;v271=0;v267=2;end end end elseif (v90<=50) then if (v90<=48) then local v151=v78[v89[3]];local v152;local v153={};v152=v18({},{[v7("\69\179\244\66\192\127\148","\164\26\236\157\44")]=function(v174,v175) local v176=0;local v177;while true do if (v176==0) then v177=v153[v175];return v177[1][v177[2]];end end end,[v7("\115\112\85\47\5\69\65\95\47\10","\114\44\47\59\74")]=function(v178,v179,v180) local v181=0;local v182;while true do if (v181==0) then v182=v153[v179];v182[1][v182[2]]=v180;break;end end end});for v183=1,v89[4] do local v184=0;local v185;while true do if (0==v184) then v81=v81 + (998 -(915 + 82)) ;v185=v77[v81];v184=1;end if (v184==1) then if (v185[1]==103) then v153[v183-1 ]={v87,v185[3]};else v153[v183-1 ]={v44,v185[3]};end v86[ #v86 + 1 ]=v153;break;end end end v87[v89[2]]=v41(v151,v152,v45);elseif (v90==49) then do return;end else local v272=v89[2 + 0 ];local v273=v89[4];local v274=v272 + 2 ;local v275={v87[v272](v87[v272 + 1 ],v87[v274])};for v385=1,v273 do v87[v274 + v385 ]=v275[v385];end local v276=v275[1];if v276 then local v418=0;while true do if (v418==0) then v87[v274]=v276;v81=v89[3];break;end end else v81=v81 + 1 ;end end elseif (v90<=52) then if (v90>51) then v87[v89[2]][v87[v89[3]]]=v89[4];else local v279=0;local v280;while true do if (v279==0) then v280=v89[2];v87[v280](v87[v280 + 1 ]);break;end end end elseif (v90==53) then v87[v89[2]]();else v87[v89[2]]={};end elseif (v90<=82) then if (v90<=68) then if (v90<=(80 -19)) then if (v90<=57) then if (v90<=(1242 -(1069 + 118))) then do return v87[v89[4 -2 ]]();end elseif (v90==56) then local v282=v89[2];local v283={v87[v282](v21(v87,v282 + 1 ,v82))};local v284=0;for v388=v282,v89[4] do local v389=0;while true do if (v389==0) then v284=v284 + 1 ;v87[v388]=v283[v284];break;end end end else local v285=0;local v286;local v287;while true do if (v285==0) then v286=v89[3];v287=v87[v286];v285=1;end if (v285==1) then for v498=v286 + 1 ,v89[4] do v287=v287   .. v87[v498] ;end v87[v89[2]]=v287;break;end end end elseif (v90<=59) then if (v90==58) then local v288=v89[1 + 1 ];v87[v288](v21(v87,v288 + 1 ,v82));else v45[v89[3]]=v87[v89[2]];end elseif (v90>60) then local v291=v89[2];local v292=v87[v291];local v293=v87[v291 + 2 ];if (v293>0) then if (v292>v87[v291 + 1 ]) then v81=v89[3];else v87[v291 + 3 ]=v292;end elseif (v292<v87[v291 + 1 ]) then v81=v89[4 -1 ];else v87[v291 + 3 ]=v292;end else local v294=0;local v295;local v296;local v297;local v298;while true do if (2==v294) then for v503=v295,v82 do local v504=0;while true do if (v504==0) then v298=v298 + 1 ;v87[v503]=v296[v298];break;end end end break;end if (v294==0) then v295=v89[2];v296,v297=v80(v87[v295](v21(v87,v295 + 1 ,v82)));v294=1;end if (v294==1) then v82=(v297 + v295) -1 ;v298=0;v294=2;end end end elseif (v90<=64) then if (v90<=(62 + 0)) then v87[v89[2]][v87[v89[3]]]=v87[v89[4]];elseif (v90>63) then local v299=0;local v300;while true do if (v299==0) then v300=v89[2];v87[v300]=v87[v300](v87[v300 + 1 ]);break;end end else local v301=v89[793 -(368 + 423) ];v87[v301](v21(v87,v301 + 1 ,v89[3]));end elseif (v90<=66) then if (v90>65) then local v302=v89[2];local v303={};for v390=1, #v86 do local v391=v86[v390];for v419=0, #v391 do local v420=0;local v421;local v422;local v423;while true do if (0==v420) then v421=v391[v419];v422=v421[1];v420=1;end if (v420==1) then v423=v421[2];if ((v422==v87) and (v423>=v302)) then local v527=0;while true do if (v527==0) then v303[v423]=v422[v423];v421[1]=v303;break;end end end break;end end end end else local v304=0;local v305;while true do if (0==v304) then v305=v89[2];v87[v305]=v87[v305](v21(v87,v305 + 1 ,v82));break;end end end elseif (v90==67) then v87[v89[2]]=v87[v89[3]][v89[4]];else v87[v89[6 -4 ]][v89[21 -(10 + 8) ]]=v87[v89[4]];end elseif (v90<=75) then if (v90<=71) then if (v90<=69) then if (v89[2]<v87[v89[4]]) then v81=v81 + (3 -2) ;else v81=v89[3];end elseif (v90==(512 -(416 + 26))) then v87[v89[2]][v89[3]]=v87[v89[4]];elseif (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=73) then if (v90>(229 -157)) then local v313=0;local v314;while true do if (v313==0) then v314=v89[2];do return v87[v314](v21(v87,v314 + 1 ,v89[3]));end break;end end else local v315=v89[2];local v316=v87[v315 + 2 ];local v317=v87[v315] + v316 ;v87[v315]=v317;if (v316>0) then if (v317<=v87[v315 + 1 ]) then local v505=0;while true do if (0==v505) then v81=v89[3];v87[v315 + 3 ]=v317;break;end end end elseif (v317>=v87[v315 + 1 + 0 ]) then v81=v89[3];v87[v315 + 3 ]=v317;end end elseif (v90>74) then v87[v89[3 -1 ]]={};else v87[v89[2]]=v87[v89[3]] + v89[4] ;end elseif (v90<=78) then if (v90<=76) then local v157=v78[v89[3]];local v158;local v159={};v158=v18({},{[v7("\59\140\44\223\209\1\171","\181\100\211\69\177")]=function(v186,v187) local v188=v159[v187];return v188[1][v188[2]];end,[v7("\54\244\185\95\30\194\185\94\12\211","\58\105\171\215")]=function(v189,v190,v191) local v192=v159[v190];v192[1][v192[2]]=v191;end});for v194=1,v89[4] do local v195=0;local v196;while true do if (0==v195) then v81=v81 + 1 ;v196=v77[v81];v195=1;end if (1==v195) then if (v196[439 -(145 + 293) ]==103) then v159[v194-1 ]={v87,v196[3]};else v159[v194-1 ]={v44,v196[3]};end v86[ #v86 + 1 ]=v159;break;end end end v87[v89[432 -(44 + 386) ]]=v41(v157,v158,v45);elseif (v90==77) then local v321=v89[2];local v322=v87[v89[3]];v87[v321 + 1 ]=v322;v87[v321]=v322[v89[4]];else v87[v89[2]]=v87[v89[3]][v87[v89[1490 -(998 + 488) ]]];end elseif (v90<=80) then if (v90>79) then local v328=0;local v329;local v330;local v331;while true do if (v328==2) then if (v330>0) then if (v331<=v87[v329 + 1 ]) then v81=v89[3 + 0 ];v87[v329 + (775 -(201 + 571)) ]=v331;end elseif (v331>=v87[v329 + (1139 -(116 + 1022)) ]) then local v532=0;while true do if (v532==0) then v81=v89[3];v87[v329 + 3 ]=v331;break;end end end break;end if (v328==0) then v329=v89[2];v330=v87[v329 + 1 + 1 ];v328=1;end if (v328==1) then v331=v87[v329] + v330 ;v87[v329]=v331;v328=2;end end else for v392=v89[2],v89[3] do v87[v392]=nil;end end elseif (v90>81) then v87[v89[2]]=v87[v89[3]][v89[4]];else v87[v89[8 -6 ]]=v44[v89[3]];end elseif (v90<=96) then if (v90<=89) then if (v90<=85) then if (v90<=83) then local v161=v89[2];local v162={v87[v161](v21(v87,v161 + 1 ,v82))};local v163=0 + 0 ;for v197=v161,v89[4] do local v198=0;while true do if (v198==0) then v163=v163 + 1 ;v87[v197]=v162[v163];break;end end end elseif (v90==84) then local v336=v89[2];local v337=v89[4];local v338=v336 + (7 -5) ;local v339={v87[v336](v87[v336 + 1 ],v87[v338])};for v394=3 -2 ,v337 do v87[v338 + v394 ]=v339[v394];end local v340=v339[1];if v340 then local v429=0;while true do if (v429==0) then v87[v338]=v340;v81=v89[862 -(814 + 45) ];break;end end else v81=v81 + (2 -1) ;end else local v341=0;local v342;while true do if (0==v341) then v342=v89[2];v87[v342](v21(v87,v342 + 1 ,v82));break;end end end elseif (v90<=87) then if (v90>86) then v81=v89[3];else local v344=v89[2];v87[v344]=v87[v344]();end elseif (v90==88) then local v346=0;local v347;local v348;while true do if (v346==1) then v87[v347 + 1 ]=v348;v87[v347]=v348[v89[4]];break;end if (v346==0) then v347=v89[2];v348=v87[v89[3]];v346=1;end end else do return v87[v89[1 + 1 ]]();end end elseif (v90<=92) then if (v90<=90) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90>91) then v87[v89[2]][v89[3]]=v89[4];else local v352=0;local v353;while true do if (v352==0) then v353=v89[2];do return v21(v87,v353,v82);end break;end end end elseif (v90<=(34 + 60)) then if (v90>93) then if (v89[2]<v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v87[v89[2]]<v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90==95) then v44[v89[888 -(261 + 624) ]]=v87[v89[2]];else v87[v89[2]]= #v87[v89[3]];end elseif (v90<=103) then if (v90<=99) then if (v90<=97) then local v164=0;local v165;local v166;local v167;while true do if (v164==0) then v165=v89[3 -1 ];v166={v87[v165](v87[v165 + 1 ])};v164=1;end if (v164==1) then v167=0;for v432=v165,v89[4] do local v433=0;while true do if (0==v433) then v167=v167 + (1081 -(1020 + 60)) ;v87[v432]=v166[v167];break;end end end break;end end elseif (v90==98) then local v357=v89[2];v87[v357]=v87[v357](v87[v357 + 1 ]);else v87[v89[2]]= #v87[v89[3]];end elseif (v90<=101) then if (v90>(1523 -(630 + 793))) then v87[v89[6 -4 ]]=v87[v89[3]]%v89[4] ;else local v361=v89[2];v87[v361](v87[v361 + 1 ]);end elseif (v90==102) then local v362=0;local v363;while true do if (v362==0) then v363=v89[2];v87[v363](v21(v87,v363 + 1 ,v89[3]));break;end end else v87[v89[2]]=v87[v89[14 -11 ]];end elseif (v90<=106) then if (v90<=104) then local v168=v87[v89[4]];if  not v168 then v81=v81 + 1 ;else local v366=0;while true do if (0==v366) then v87[v89[2]]=v168;v81=v89[3];break;end end end elseif (v90>105) then if  not v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v87[v89[2]]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=(43 + 65)) then if (v90==107) then if (v87[v89[2]]<v89[4]) then v81=v81 + (3 -2) ;else v81=v89[3];end elseif ((v89[3]==v7("\202\204\175\116","\25\149\137\225\34\129")) or (v89[3]==v7("\253\234\36\250\209\135\36","\82\154\143\80\156\180\233"))) then v87[v89[2]]=v45;else v87[v89[2]]=v45[v89[3]];end elseif (v90>109) then v87[v89[2]]=v89[3] + v87[v89[4]] ;elseif (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end v81=v81 + 1 ;end end;end return v41(v40(),{},v28)(...);end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\125\69","\210\83\107\40\46\93\101\161"),function(v49) if (v9(v49,2)==79) then local v105=0;while true do if (v105==0) then v31=v8(v11(v49,1,1));return "";end end else local v106=v10(v8(v49,16));if v31 then local v115=0;local v116;while true do if (v115==0) then v116=v13(v106,v31);v31=nil;v115=1;end if (1==v115) then return v116;end end else return v106;end end end);v32=nil;v29=1;end if (v29==1) then function v32(v50,v51,v52) if v52 then local v107=0;local v108;while true do if (v107==0) then v108=(v50/(2^(v51-1)))%(2^(((v52-1) -(v51-1)) + 1)) ;return v108-(v108%1) ;end end else local v109=0;local v110;while true do if (v109==0) then v110=2^(v51-(2 -1)) ;return (((v50%(v110 + v110))>=v110) and 1) or 0 ;end end end end v33=nil;function v33() local v53=v9(v27,v30,v30);v30=v30 + 1 ;return v53;end v34=nil;v29=2;end if (v29==3) then function v36() local v54=v35();local v55=v35();local v56=1;local v57=(v32(v55,1,20) * (2^32)) + v54 ;local v58=v32(v55,21,31);local v59=((v32(v55,32)==1) and  -1) or 1 ;if (v58==0) then if (v57==0) then return v59 * 0 ;else v58=1;v56=0;end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end v37=nil;function v37(v60) local v61;if  not v60 then v60=v35();if (v60==0) then return "";end end v61=v11(v27,v30,(v30 + v60) -1 );v30=v30 + v60 ;local v62={};for v91=1, #v61 do v62[v91]=v10(v9(v11(v61,v91,v91)));end return v14(v62);end v38=v35;v29=4;end if (v29==2) then function v34() local v63=0;local v64;local v65;while true do if (v63==0) then v64,v65=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v63=1;end if (v63==1) then return (v65 * 256) + v64 ;end end end v35=nil;function v35() local v66,v67,v68,v69=v9(v27,v30,v30 + 3 );v30=v30 + (11 -7) ;return (v69 * 16777216) + (v68 * 65536) + (v67 * 256) + v66 ;end v36=nil;v29=3;end if (v29==4) then v39=nil;function v39(...) return {...},v20("#",...);end v40=nil;function v40() local v70={};local v71={};local v72={};local v73={v70,v71,nil,v72};local v74=v35();local v75={};for v93=1,v74 do local v94=0;local v95;local v96;while true do if (0==v94) then v95=v33();v96=nil;v94=1;end if (v94==1) then if (v95==1) then v96=v33()~=0 ;elseif (v95==(3 -1)) then v96=v36();elseif (v95==3) then v96=v37();end v75[v93]=v96;break;end end end v73[3]=v33();for v97=1,v35() do local v98=0;local v99;while true do if (0==v98) then v99=v33();if (v32(v99,1,1)==0) then local v118=v32(v99,2,3);local v119=v32(v99,4,15 -9 );local v120={v34(),v34(),nil,nil};if (v118==(931 -(857 + 74))) then local v122=0;while true do if (v122==0) then v120[3]=v34();v120[4]=v34();break;end end elseif (v118==1) then v120[3]=v35();elseif (v118==2) then v120[3]=v35() -(2^16) ;elseif (v118==3) then local v169=0;while true do if (v169==0) then v120[571 -(367 + 201) ]=v35() -((929 -(214 + 713))^16) ;v120[2 + 2 ]=v34();break;end end end if (v32(v119,1,1)==1) then v120[2]=v75[v120[2]];end if (v32(v119,2,2)==1) then v120[3]=v75[v120[3]];end if (v32(v119,3,3)==1) then v120[4]=v75[v120[4]];end v70[v97]=v120;end break;end end end for v100=1 + 0 ,v35() do v71[v100-1 ]=v40();end return v73;end v29=5;end end end vv17(),...);
